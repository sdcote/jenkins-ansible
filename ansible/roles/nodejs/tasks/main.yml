---
- name: Set up the Nodesource RPM directory.
  set_fact:
    nodejs_rhel_rpm_dir: "pub_{{ nodejs_version }}"

- name: Import Nodesource RPM key (CentOS < 7).
  rpm_key:
    key: http://rpm.nodesource.com/pub/el/NODESOURCE-GPG-SIGNING-KEY-EL
    state: present
  become: true
  when: ansible_distribution_major_version|int < 7

- name: Import Nodesource RPM key (CentOS 7+).
  rpm_key:
    key: https://rpm.nodesource.com/pub/el/NODESOURCE-GPG-SIGNING-KEY-EL
    state: present
  become: true
  when: ansible_distribution_major_version|int >= 7

- name: Add Nodesource repositories for Node.js (CentOS < 7).
  yum:
    name: "http://rpm.nodesource.com/{{ nodejs_rhel_rpm_dir }}/el/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/nodesource-release-el{{ ansible_distribution_major_version }}-1.noarch.rpm"
    state: present
  become: true
  when: ansible_distribution_major_version|int < 7

- name: Add Nodesource repositories for Node.js (CentOS 7+).
  yum:
    name: "https://rpm.nodesource.com/{{ nodejs_rhel_rpm_dir }}/el/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/nodesource-release-el{{ ansible_distribution_major_version }}-1.noarch.rpm"
    state: present
  become: true
  when: ansible_distribution_major_version|int >= 7

- name: Ensure Node.js AppStream module is disabled (CentOS 8+).
  command: yum module disable -y nodejs
  args:
    warn: false
  register: module_disable
  changed_when: "'Nothing to do.' not in module_disable.stdout"
  become: true
  when: ansible_distribution_major_version|int >= 8

- name: Ensure Node.js and npm are installed.
  yum:
    name: "nodejs-{{ nodejs_version|regex_replace('x', '') }}*"
    state: present
    enablerepo: nodesource
  become: true

- name: Define nodejs_install_npm_user
  set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  become: true
  when: nodejs_install_npm_user is not defined

- name: Create npm global directory
  file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ nodejs_install_npm_user }}"
#    group: "{{ nodejs_install_npm_user }}"
    state: directory
  become: true

- name: Add npm_config_prefix bin directory to global $PATH.
  template:
    src: npm.sh.j2
    dest: /etc/profile.d/npm.sh
    mode: 0644
  become: true

- name: Ensure npm global packages are installed.
  npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default('latest') }}"
    global: true
    state: latest
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  with_items: "{{ nodejs_npm_global_packages }}"
  become: true
  tags: ['skip_ansible_lint']

- name: Install packages defined in a given package.json.
  npm:
    path: "{{ nodejs_package_json_path }}"
  become: true
  when: nodejs_package_json_path is defined and nodejs_package_json_path
